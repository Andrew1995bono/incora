{"version":3,"sources":["Components/ButtonWithRedirect.jsx","pages/Posts/postsColumns.js","store/constants.js","pages/Posts/Posts.js","store/actions.js","pages/Post/Comments.js","pages/Post/Post.js","pages/Users/userColumns.js","pages/Users/Users.js","App.js","reportWebVitals.js","store/reducers.js","store/index.js","index.js"],"names":["ButtonWithRedirect","recordId","pathname","text","history","useHistory","onClick","push","state","columns","title","dataIndex","key","width","fixed","render","record","id","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","FETCH_POSTS_REQUEST","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","FETCH_POST_REQUEST","FETCH_POST_SUCCESS","FETCH_POST_FAILURE","connect","loading","postsReducer","posts","error","dispatch","getPosts","rowId","a","type","fetch","response","json","data","payload","useState","isModalVisible","setIsModalVisible","useEffect","location","handleOk","method","console","log","message","success","columns_posts","dataSource","rowKey","pagination","shape","visible","onOk","onCancel","CommentsUnderPost","comments","map","item","index","author","href","email","avatar","src","alt","content","body","postReducer","post","getPost","postId","handleEdit","handleDelete","Comments","danger","children","userReducer","users","getUsers","App","exact","path","component","Posts","Post","Users","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateUsers","initialStatePosts","initialStatePost","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","logger","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.18c49cac.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ButtonWithRedirect = ({ recordId, pathname, text }) => {\n  const history = useHistory();\n\n  return (\n    <Button\n      onClick={() => {\n        history.push({ pathname, state: recordId });\n      }}\n    >\n      {text}\n    </Button>\n  );\n};\n\nexport default ButtonWithRedirect;\n","import ButtonWithRedirect from \"../../Components/ButtonWithRedirect\";\n\nconst columns = [\n  {\n    title: \"UserID\",\n    dataIndex: \"userId\",\n    key: \"userId\",\n    width: 50,\n    fixed: \"left\",\n  },\n  {\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n    width: 50,\n    fixed: \"left\",\n  },\n  {\n    title: \"Title\",\n    dataIndex: \"title\",\n    key: \"title\",\n    width: 410,\n    fixed: \"left\",\n  },\n  {\n    title: \"Body\",\n    dataIndex: \"body\",\n    key: \"body\",\n    width: 1000,\n    fixed: \"left\",\n  },\n  {\n    title: \"Action\",\n    key: \"operation\",\n    fixed: \"right\",\n    width: 100,\n    render: (record) => (\n      <ButtonWithRedirect\n        recordId={record.id}\n        text={\"Details\"}\n        pathname={\"/post\"}\n      />\n    ),\n  },\n];\n\nexport default columns;\n","// constants that identifies actions for Users\nexport const FETCH_USERS_REQUEST = \"FETCH_USERS_REQUEST\";\nexport const FETCH_USERS_SUCCESS = \"FETCH_USERS_SUCCESS\";\nexport const FETCH_USERS_FAILURE = \"FETCH_USERS_FAILURE\";\n// constants that identifies actions for Posts\nexport const FETCH_POSTS_REQUEST = \"FETCH_POSTS_REQUEST\";\nexport const FETCH_POSTS_SUCCESS = \"FETCH_POSTS_SUCCESS\";\nexport const FETCH_POSTS_FAILURE = \"FETCH_POSTS_FAILURE\";\n// constants that identifies actions for Posts\nexport const FETCH_POST_REQUEST = \"FETCH_POST_REQUEST\";\nexport const FETCH_POST_SUCCESS = \"FETCH_POST_SUCCESS\";\nexport const FETCH_POST_FAILURE = \"FETCH_POST_FAILURE\";\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Table, Modal, message } from \"antd\";\nimport columns_posts from \"./postsColumns\";\nimport { requestPosts } from \"../../store/actions\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => ({\n  loading: state.postsReducer.loading,\n  posts: state.postsReducer.posts,\n  error: state.postsReducer.error,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getPosts: (id) => dispatch(requestPosts(id)),\n});\n\nconst Posts = ({ loading, posts, getPosts, history }) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  useEffect(() => {\n    getPosts(history.location.state);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // fetching POST request by clicking \"OK\" button in a modal window\n  const handleOk = async () => {\n    try {\n      const response = await fetch(\n        \"https://jsonplaceholder.typicode.com/posts\",\n        { method: \"POST\" }\n      );\n      const data = await response.json();\n      console.log(data);\n      message.success(`${data.id} was successfully added`);\n    } catch (error) {\n      message.error(error);\n    }\n    setIsModalVisible(false);\n  };\n\n  return (\n    <>\n      <Table\n        loading={loading}\n        columns={columns_posts}\n        dataSource={posts}\n        rowKey={\"id\"}\n        pagination={false}\n      />\n      <Button\n        onClick={() => setIsModalVisible(true)}\n        type=\"primary\"\n        shape=\"default\"\n      >\n        Add new\n      </Button>\n      <Modal\n        title=\"Basic Modal\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={() => setIsModalVisible(false)}\n      >\n        <h2>Add some post:</h2>\n        <input type=\"text\" />\n        <p>Some post content...</p>\n      </Modal>\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n","import {\n  FETCH_USERS_REQUEST,\n  FETCH_USERS_SUCCESS,\n  FETCH_USERS_FAILURE,\n} from \"./constants\";\n\nimport {\n  FETCH_POSTS_REQUEST,\n  FETCH_POSTS_SUCCESS,\n  FETCH_POSTS_FAILURE,\n} from \"./constants\";\n\nimport {\n  FETCH_POST_REQUEST,\n  FETCH_POST_SUCCESS,\n  FETCH_POST_FAILURE,\n} from \"./constants\";\n\nexport const requestUsers = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: FETCH_USERS_REQUEST,\n    });\n    try {\n      const response = await fetch(\n        \"https://jsonplaceholder.typicode.com/users\"\n      );\n      const data = await response.json();\n      dispatch({\n        type: FETCH_USERS_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: FETCH_USERS_FAILURE,\n        payload: error,\n      });\n    }\n  };\n};\n\nexport const requestPosts = (rowId) => {\n  return async (dispatch) => {\n    dispatch({\n      type: FETCH_POSTS_REQUEST,\n    });\n    try {\n      const response = await fetch(\n        `https://jsonplaceholder.typicode.com/posts?userId=${rowId}`\n      );\n      const data = await response.json();\n      dispatch({\n        type: FETCH_POSTS_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: FETCH_POSTS_FAILURE,\n        payload: error,\n      });\n    }\n  };\n};\n\nexport const requestPost = (rowId) => {\n  return async (dispatch) => {\n    dispatch({\n      type: FETCH_POST_REQUEST,\n    });\n    try {\n      const response = await fetch(\n        `https://jsonplaceholder.typicode.com/comments?postId=${rowId}`\n      );\n      const data = await response.json();\n      dispatch({\n        type: FETCH_POST_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: FETCH_POST_FAILURE,\n        payload: error,\n      });\n    }\n  };\n};\n","import { Comment, Avatar } from \"antd\";\n\nconst CommentsUnderPost = ({ comments }) =>\n  comments.map((item, index) => (\n    <Comment\n      author={<a href=\"comments\">{item.email}</a>}\n      avatar={\n        <Avatar\n          src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n          alt=\"Han Solo\"\n        />\n      }\n      content={<p>{item.body}</p>}\n      key={\"comment\" + index}\n    ></Comment>\n  ));\n\nexport default CommentsUnderPost;\n","import React, { useEffect } from \"react\";\nimport { Button } from \"antd\";\nimport { requestPost } from \"../../store/actions\";\nimport { connect } from \"react-redux\";\nimport CommentsUnderPost from \"./Comments\";\n\nconst mapStateToProps = (state) => ({\n  loading: state.postReducer.loading,\n  comments: state.postReducer.post,\n  error: state.postReducer.error,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getPost: (id) => dispatch(requestPost(id)),\n});\n\nconst Post = ({ loading, comments, getPost, history }) => {\n  const postId = history.location.state;\n\n  useEffect(() => {\n    getPost(postId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //Fetching some PUT request to the API server\n  const handleEdit = async () => {\n    const response = await fetch(\n      \"https://jsonplaceholder.typicode.com/posts/1\",\n      {\n        method: \"PUT\",\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n  };\n\n  //Fetching some DELETE request to the API server\n  const handleDelete = async () => {\n    const response = await fetch(\n      \"https://jsonplaceholder.typicode.com/posts/1\",\n      {\n        method: \"DELETE\",\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n  };\n\n  return (\n    <>\n      <h1>{`Post ${postId}`}</h1>\n      <CommentsUnderPost comments={comments} />\n      {!loading && (\n        <>\n          <Button onClick={handleEdit} type=\"primary\" shape=\"default\">\n            Edit\n          </Button>\n          <Button onClick={handleDelete} type=\"primary\" danger shape=\"default\">\n            Delete\n          </Button>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\n","import ButtonWithRedirect from \"../../Components/ButtonWithRedirect\";\n\nconst columns = [\n  {\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n    width: 100,\n    fixed: \"left\",\n  },\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    width: 100,\n    fixed: \"left\",\n  },\n  {\n    title: \"Username\",\n    dataIndex: \"username\",\n    key: \"username\",\n    width: 100,\n    fixed: \"left\",\n  },\n  {\n    title: \"Email\",\n    dataIndex: \"email\",\n    key: \"email\",\n    width: 100,\n    fixed: \"left\",\n  },\n  {\n    title: \"Adress\",\n    dataIndex: \"address\",\n    children: [\n      {\n        title: \"City\",\n        dataIndex: [\"address\", \"city\"],\n        key: \"city\",\n        width: 150,\n      },\n      {\n        title: \"Street\",\n        dataIndex: [\"address\", \"street\"],\n        key: \"street\",\n        width: 150,\n      },\n      {\n        title: \"Suite\",\n        dataIndex: [\"address\", \"suite\"],\n        key: \"suite\",\n        width: 150,\n      },\n      {\n        title: \"Zipcode\",\n        dataIndex: [\"address\", \"zipcode\"],\n        key: \"zipcode\",\n        width: 150,\n      },\n    ],\n  },\n  {\n    title: \"Company\",\n    children: [\n      {\n        title: \"Company Name\",\n        dataIndex: [\"company\", \"name\"],\n        key: \"companyName\",\n        width: 200,\n      },\n      {\n        title: \"Bs\",\n        dataIndex: [\"company\", \"bs\"],\n        key: \"companyBs\",\n        width: 200,\n      },\n    ],\n  },\n  {\n    title: \"Action\",\n    key: \"operation\",\n    fixed: \"right\",\n    width: 100,\n    render: (record) => (\n      <ButtonWithRedirect\n        recordId={record.id}\n        text={\"Posts\"}\n        pathname={\"/posts\"}\n      />\n    ),\n  },\n];\n\nexport default columns;\n","import React, { useEffect } from \"react\";\nimport { Table } from \"antd\";\nimport { requestUsers } from \"../../store/actions\";\nimport { connect } from \"react-redux\";\nimport columns from \"./userColumns\";\n\nconst mapStateToProps = (state) => ({\n  loading: state.userReducer.loading,\n  users: state.userReducer.users,\n  error: state.userReducer.error,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUsers: () => dispatch(requestUsers()),\n});\n\nconst Users = ({ loading, users, getUsers }) => {\n  useEffect(() => {\n    getUsers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <Table\n        loading={loading}\n        columns={columns}\n        dataSource={users}\n        rowKey={\"id\"}\n        pagination={false}\n      />\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\n","import \"./App.scss\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Posts, Post, Users } from \"./pages\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/posts\" component={Posts} />\n        <Route path=\"/post\" component={Post} />\n        <Route path=\"/\" component={Users} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  FETCH_USERS_REQUEST,\n  FETCH_USERS_SUCCESS,\n  FETCH_USERS_FAILURE,\n} from \"./constants\";\n\nimport {\n  FETCH_POSTS_REQUEST,\n  FETCH_POSTS_SUCCESS,\n  FETCH_POSTS_FAILURE,\n} from \"./constants\";\n\nimport {\n  FETCH_POST_REQUEST,\n  FETCH_POST_SUCCESS,\n  FETCH_POST_FAILURE,\n} from \"./constants\";\n\nconst initialStateUsers = {\n  loading: false,\n  users: [],\n  error: \"\",\n};\n\nconst initialStatePosts = {\n  loading: false,\n  posts: [],\n  error: \"\",\n};\n\nconst initialStatePost = {\n  loading: false,\n  post: [],\n  error: \"\",\n};\n\nexport const userReducer = (state = initialStateUsers, action) => {\n  switch (action.type) {\n    case FETCH_USERS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCH_USERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        users: action.payload,\n      };\n    case FETCH_USERS_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return initialStateUsers;\n  }\n};\n\nexport const postsReducer = (state = initialStatePosts, action) => {\n  switch (action.type) {\n    case FETCH_POSTS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCH_POSTS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        posts: action.payload,\n      };\n    case FETCH_POSTS_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return initialStatePosts;\n  }\n};\n\nexport const postReducer = (state = initialStatePost, action) => {\n  switch (action.type) {\n    case FETCH_POST_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCH_POST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        post: action.payload,\n      };\n    case FETCH_POST_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return initialStatePost;\n  }\n};\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { userReducer, postsReducer, postReducer } from \"./reducers\";\n\nconst rootReducer = combineReducers({ userReducer, postsReducer, postReducer });\n\nexport const store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}